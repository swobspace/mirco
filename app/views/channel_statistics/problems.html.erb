<%= turbo_frame_tag("problems") do %>
 <div class="table-responsive-xl">
  <% if @channel_statistics.size > 0 %>
    <%= content_tag :table, id: "problems_table",
          class: "table table-bordered mb-0" do %>
      <thead>
        <tr class="search">
          <th class="text-start"><%= t('attributes.server') %></th>
          <th class="text-start"><%= t('attributes.channel') %></th>
          <th class="text-start"><%= t('attributes.connector') %></th>
          <th class="text-start"><%= t('attributes.last_message_received_at') %></th>
          <th class="text-start"><%= t('attributes.last_message_error_at') %></th>
          <th class="text-start"><%= t('attributes.last_message_sent_at') %></th>
          <th class="text-end"><%= t('attributes.queued') %></th>
          <th class="text-center"><%= t('attributes.updated_at') %></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <% @channel_statistics.each do |problem| %>
          <%= tag.tr(id: dom_id(problem, :problem), class: dom_class(problem)) do %>
            <td class="text-start"><%= problem.server %></td>
            <td class="text-start">
              <%= link_to(
                    problem.channel,
                    channel_path(problem.channel),
                    class: "primary-link")
              %>
            </td>
            <td class="text-start">
              <%= link_to(
                    problem.name,
                    polymorphic_path(problem),
                    class: "primary-link")
              %>
            </td>
            <%= render TdEscalationComponent.new(
                  escalatable: problem,
                  attrib: 'last_message_received_at',
                  manual_update: problem.server.manual_update
              ) %>
            <%= render TdEscalationComponent.new(
                  escalatable: problem,
                  attrib: 'last_message_error_at',
                  manual_update: problem.server.manual_update
              ) %>
            <%= render TdEscalationComponent.new(
                  escalatable: problem,
                  attrib: 'last_message_sent_at',
                  manual_update: problem.server.manual_update
              ) %>
            <%= render TdEscalationComponent.new(
                  escalatable: problem,
                  attrib: 'queued',
                  alert: (problem.sent_last_30min < 1),
                  css: 'text-end',
                  manual_update: problem.server.manual_update
                ) %>
            <%= render TdEscalationComponent.new(
                  escalatable: problem,
                  attrib: 'updated_at',
                  manual_update: problem.server.manual_update
                ) %>
            <td class="text-nowrap text-center">
              <%= link_to(raw(%Q[<i class="fas fa-chart-bar"></i>]), problem,
                          class: 'btn btn-secondary btn-sm my-0',
                          data: { "turbo" => false }) if can? :read, problem
               %>

              <%= render AcknowledgeButtonComponent.new(
                           notable: problem,
                           readonly: cannot?(:manage, problem)
                         )
               %>
            </td>
          <% end %>
        <% end %>
      </tbody>
    <% end %>
    <% if @pagy.pages > 1 %>
      <div class="mt-3 ms-3">
        <%== pagy_bootstrap_nav(@pagy) %>
      </div>
    <% end %>
  <% end %>
 </div>
<% end %>

