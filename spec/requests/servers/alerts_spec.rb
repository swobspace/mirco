# frozen_string_literal: true

require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe '/alerts', type: :request do
  let(:server) { FactoryBot.create(:server, name: 'MyServer') }

  let(:valid_attributes) do
    {
      server_id: server.id,
      channel_id: nil,
      channel_statistic_id: nil,
      type: 'alert',
      message: 'some special stuff'
    }
  end

  before(:each) do
    login_admin
  end

  describe 'GET /index' do
    it 'renders a successful response' do
      Alert.create! valid_attributes
      get server_alerts_url(server)
      expect(response).to be_successful
    end
  end

  describe 'GET /show' do
    it 'renders a successful response' do
      alert = Alert.create! valid_attributes
      get server_alert_url(server,alert)
      expect(response).to be_successful
    end
  end
end
